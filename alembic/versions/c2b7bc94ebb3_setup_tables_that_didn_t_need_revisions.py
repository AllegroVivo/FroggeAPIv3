"""Setup Tables that didn't need revisions

Revision ID: c2b7bc94ebb3
Revises: 
Create Date: 2025-08-11 12:10:31.595851

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import App

# revision identifiers, used by Alembic.
revision: str = 'c2b7bc94ebb3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('target', sa.String(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=False),
    sa.Column('request_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guild_ids',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('embeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('color', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='embeds_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('create_channel', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('channel_roles', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.Column('creation_category', sa.BigInteger(), nullable=True),
    sa.Column('post_url', sa.String(), nullable=True),
    sa.Column('notify_roles', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.Column('notify_users', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='forms_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('giveaway_managers',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='giveaways_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('glyph_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('message', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='glyph_messages_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guild_configurations',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('timezone', sa.Integer(), server_default='7', nullable=False),
    sa.Column('log_channel_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], ),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='positions_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_managers',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='profile_managers_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('raffle_managers',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='raffle_managers_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('reaction_role_managers',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild_ids.guild_id'], name='reaction_role_managers_guild_ids_fkey'),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('embed_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('embed_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('inline', App.Models.Common.NormalizedBoolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['embed_id'], ['embeds.id'], name='embed_fields_embeds_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('embed_id', 'sort_order', name='uq_embed_field_sort_order')
    )
    op.create_table('embed_footers',
    sa.Column('embed_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['embed_id'], ['embeds.id'], name='embed_footers_embeds_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('embed_id')
    )
    op.create_table('embed_headers',
    sa.Column('embed_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['embed_id'], ['embeds.id'], name='embed_headers_embeds_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('embed_id')
    )
    op.create_table('embed_images',
    sa.Column('embed_id', sa.Integer(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('main_image_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['embed_id'], ['embeds.id'], name='embed_images_embeds_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('embed_id')
    )
    op.create_table('form_post_options',
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('color', sa.Integer(), nullable=True),
    sa.Column('button_label', sa.String(), nullable=True),
    sa.Column('button_emoji', sa.String(), nullable=True),
    sa.Column('channel_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], name='form_post_options_forms_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_table('form_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('primary_text', sa.String(), nullable=True),
    sa.Column('secondary_text', sa.String(), nullable=True),
    sa.Column('ui_type', sa.Integer(), server_default='0', nullable=False),
    sa.Column('required', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], name='form_questions_forms_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_response_collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('submitted_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], name='form_response_collections_forms_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('giveaways',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('winners', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.Column('post_url', sa.String(), nullable=True),
    sa.Column('rolled_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('rolled_by', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['giveaway_managers.guild_id'], name='giveaways_giveaway_managers_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_channel_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_ids', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.Column('role_ids', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['profile_managers.guild_id'], name='profile_channel_groups_profile_managers_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_requirements',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('url', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('color', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('jobs', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('rates', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('gender', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('race', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('orientation', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('height', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('age', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('mare', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('world', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('likes', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('dislikes', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('personality', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('aboutme', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('thumbnail', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('main_image', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['profile_managers.guild_id'], name='profile_requirements_profile_managers_fkey'),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('post_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['profile_managers.guild_id'], name='profiles_profile_managers_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raffles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('winners', App.Models.Common.ArrayOrJSON(), server_default='{}', nullable=False),
    sa.Column('is_active', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('post_url', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('prize', sa.String(), nullable=True),
    sa.Column('num_winners', sa.Integer(), server_default='1', nullable=False),
    sa.Column('auto_notify', App.Models.Common.NormalizedBoolean(), server_default='True', nullable=False),
    sa.Column('cost', sa.Integer(), server_default='100000', nullable=False),
    sa.Column('rolled_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('rolled_by', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['raffle_managers.guild_id'], name='raffles_raffle_managers_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reaction_role_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('post_url', sa.String(), nullable=True),
    sa.Column('msg_type', sa.Integer(), server_default='1', nullable=False),
    sa.Column('type_param', sa.Integer(), nullable=True),
    sa.Column('color', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['reaction_role_managers.guild_id'], name='reaction_role_messages_reaction_role_managers_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_prompts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('prompt_type', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('show_cancel', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.Column('is_active', App.Models.Common.NormalizedBoolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], name='form_prompts_forms_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['form_questions.id'], name='form_prompts_form_questions_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_question_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('emoji', sa.String(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['form_questions.id'], name='form_options_form_questions_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('form_question_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('values', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.Column('last_edited', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['form_questions.id'], name='form_question_responses_form_questions_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('giveaway_details',
    sa.Column('giveaway_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('prize', sa.String(), nullable=True),
    sa.Column('num_winners', sa.Integer(), server_default='1', nullable=False),
    sa.Column('auto_notify', App.Models.Common.NormalizedBoolean(), server_default='True', nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('color', sa.Integer(), nullable=True),
    sa.Column('end_dt', sa.TIMESTAMP(), nullable=True),
    sa.Column('emoji', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['giveaway_id'], ['giveaways.id'], name='giveaway_details_giveaways_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('giveaway_id')
    )
    op.create_table('giveaway_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('giveaway_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['giveaway_id'], ['giveaways.id'], name='giveaway_entries_giveaways_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_at_a_glances',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('world', sa.Integer(), nullable=True),
    sa.Column('gender_enum', sa.Integer(), nullable=True),
    sa.Column('pronouns', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.Column('race_enum', sa.Integer(), nullable=True),
    sa.Column('clan_enum', sa.Integer(), nullable=True),
    sa.Column('orientation_enum', sa.Integer(), nullable=True),
    sa.Column('race_custom', sa.String(), nullable=True),
    sa.Column('clan_custom', sa.String(), nullable=True),
    sa.Column('orientation_custom', sa.String(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('age', sa.String(), nullable=True),
    sa.Column('mare', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name='profile_at_a_glance_profiles_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('profile_details',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('custom_url', sa.String(), nullable=True),
    sa.Column('color', sa.Integer(), nullable=True),
    sa.Column('jobs', App.Models.Common.ArrayOrJSON(), server_default='[]', nullable=False),
    sa.Column('rates', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name='profile_details_profiles_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('profile_images',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('main_image_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name='profile_images_profiles_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('profile_personalities',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('likes', App.Models.Common.ArrayOrJSON(), nullable=True),
    sa.Column('dislikes', App.Models.Common.ArrayOrJSON(), nullable=True),
    sa.Column('personality', sa.String(), nullable=True),
    sa.Column('aboutme', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name='profile_personalities_profiles_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('raffle_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('raffle_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('quantity', sa.Integer(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['raffle_id'], ['raffles.id'], name='raffle_entries_raffles_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reaction_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('role_id', sa.BigInteger(), nullable=True),
    sa.Column('emoji', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['reaction_role_messages.id'], name='reaction_roles_reaction_role_messages_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_additional_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('caption', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profile_images.profile_id'], name='profile_additional_images_profile_images_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profile_additional_images')
    op.drop_table('reaction_roles')
    op.drop_table('raffle_entries')
    op.drop_table('profile_personalities')
    op.drop_table('profile_images')
    op.drop_table('profile_details')
    op.drop_table('profile_at_a_glances')
    op.drop_table('giveaway_entries')
    op.drop_table('giveaway_details')
    op.drop_table('form_question_responses')
    op.drop_table('form_question_options')
    op.drop_table('form_prompts')
    op.drop_table('reaction_role_messages')
    op.drop_table('raffles')
    op.drop_table('profiles')
    op.drop_table('profile_requirements')
    op.drop_table('profile_channel_groups')
    op.drop_table('giveaways')
    op.drop_table('form_response_collections')
    op.drop_table('form_questions')
    op.drop_table('form_post_options')
    op.drop_table('embed_images')
    op.drop_table('embed_headers')
    op.drop_table('embed_footers')
    op.drop_table('embed_fields')
    op.drop_table('reaction_role_managers')
    op.drop_table('raffle_managers')
    op.drop_table('profile_managers')
    op.drop_table('positions')
    op.drop_table('guild_configurations')
    op.drop_table('glyph_messages')
    op.drop_table('giveaway_managers')
    op.drop_table('forms')
    op.drop_table('embeds')
    op.drop_table('users')
    op.drop_table('guild_ids')
    op.drop_table('audit_log')
    # ### end Alembic commands ###
